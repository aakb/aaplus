<?php
/**
 * @file
 * @TODO: Missing description.
 */

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BygningRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BygningRepository extends EntityRepository {
  /**
   * Check if a User has access to a Bygning
   *
   * @param User $user
   * @param Bygning $bygning
   * @return bool
   */
  public function hasAccess(User $user, Bygning $bygning) {
    if ($this->hasFullAccess($user)) {
      return true;
    }

    $bygninger = $this->findByUser($user);
    return $bygninger && in_array($bygning, $bygninger);
  }

  /**
   * Find all Bygning that a User has access to
   *
   * @param User $user
   * @param bool $returnQuery
   * @return array|\Doctrine\ORM\Query
   */
  public function findByUser(User $user, $returnQuery = false) {
    if ($this->hasFullAccess($user)) {
      $query = $this->_em->createQuery("SELECT b FROM AppBundle:Bygning b");
    } else {
      $query = $this->_em->createQuery("SELECT b FROM AppBundle:Bygning b WHERE :user MEMBER OF b.users");
      $query->setParameter('user', $user);
    }

    return $returnQuery ? $query : $query->getResult();
  }

  /**
   * Search all Bygning that a User has access to
   *
   * @param User $user
   * @param bool $returnQuery
   * @return array|\Doctrine\ORM\Query
   */
  public function searchByUser(User $user, $search) {
    $qb = $this->_em->createQueryBuilder();
    $qb->select('b')
      ->from('AppBundle:Bygning', 'b');

    if(!empty($search['navn'])) {
      $qb->andWhere('b.navn LIKE :navn')
        ->setParameter('navn', '%'.$search['navn'].'%');
    }

    if(!empty($search['adresse'])) {
      $qb->andWhere('b.adresse LIKE :adresse')
        ->setParameter('adresse', '%'.$search['adresse'].'%');
    }

    if(!empty($search['postBy'])) {
      $qb->andWhere('b.postBy LIKE :postBy')
        ->setParameter('postBy', '%'.$search['postBy'].'%');
    }

    if(!empty($search['bygId'])) {
      $qb->andWhere('b.bygId = :bygId')
        ->setParameter('bygId', $search['bygId']);
    }

    if(!empty($search['postnummer'])) {
      $qb->andWhere('b.postnummer = :postnummer')
        ->setParameter('postnummer', $search['postnummer']);
    }

    if (!$this->hasFullAccess($user)) {
      $qb->andWhere(':user MEMBER OF b.users');
      $qb->setParameter('user', $user);
    }

    return $qb->getQuery()->getResult();
  }

  /**
   * The ugly function to check if a user is allowed to do everything â€¦
   *
   * @param $user
   * @return bool
   */
  private function hasFullAccess($user) {
    return $user && $user->hasRole('ROLE_SUPER_ADMIN');
  }
}
