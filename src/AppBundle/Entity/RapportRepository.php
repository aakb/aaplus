<?php
/**
 * @file
 * @TODO: Missing description.
 */

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RapportRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RapportRepository extends EntityRepository {
  /**
   * Get the Pumpetiltag for the rapport
   *
   * @param $rapport
   * @return \AppBundle\Entity\PumpeTiltag
   * @throws \Doctrine\ORM\NonUniqueResultException
   */
  public function getPumpeTiltag($rapport) {
    $qb = $this->_em->createQueryBuilder();
    $qb->select('t')
      ->from('AppBundle\Entity\Tiltag', 't')
      ->where('t INSTANCE OF AppBundle\Entity\PumpeTiltag')
      ->andWhere('t.rapport IN (:rapport)')
      ->setParameter('rapport', $rapport);

    $query = $qb->getQuery();

    return $query->getOneOrNullResult();
  }

  /**
   * Check if a User has access to a Rapport
   *
   * @param User $user
   * @param Rapport $rapport
   * @return bool
   */
  public function hasAccess(User $user, Rapport $rapport) {
    if ($this->hasFullAccess($user)) {
      return true;
    }

    return $rapport->getBygning()->getUsers()->contains($user);
  }

  /**
   * The ugly function to check if a user is allowed to do everything â€¦
   *
   * @param $user
   * @return bool
   */
  private function hasFullAccess($user) {
    return $user && $user->hasRole('ROLE_SUPER_ADMIN');
  }
}
